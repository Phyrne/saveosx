#! /bin/bash

# This is a script to create scripts and plists to launch X upon user login to run in a seamless manner along side the Aqua desktop
#
# Written by cmacrae 21/07/13

# Check for root
if [[ $EUID -ne 0 ]]; then
  echo "This script must be run as root!"
  exit 1
fi

# Fancy title function
title() {
  COLUMNS=$(tput cols)
  tput clear
  Y=$((($COLUMNS-${#MESSAGE})/2))
  X=1
  tput cup $X $Y
  echo -e "${MESSAGE}"
}

# ANSI properties/colours
ESC='\033[0m'
BOLD='\033[1m'
BLUE='\033[38;34m'
BLUE_UL='\033[38;4;34m'
GREEN='\033[38;32m'
GREEN_UL='\033[38;4;32m'
CYAN='\033[38;36m'
CYAN_UL='\033[38;4;36m'
RED='\033[38;31m'
RED_UL='\033[38;4;31m'
PURPLE='\033[38;35m'
PURPLE_UL='\033[38;4;35m'
YELLOW='\033[38;33m'
YELLOW_UL='\033[38;4;33m'

# Title
clear
MESSAGE=""$BLUE_UL"X11 Setup"$ESC""
title
cat << EOM
This script will set X11 to run on login in a seamless manner.
We've taken the liberty of leaving the Dock.app running, as this
handles Aqua's virtual workspaces.
This means you can have a fully functional, seamless X11 environment, like on any other UNIX based system,
but still get all the fancy gesture based navigation and animations that Apple have implemented in Aqua.

You will still be able to run your Aqua applications as usual!"

Lastly, before we finish saving OS X ;) Please understand that you will need to set up your"
X11 environment yourself. This is done as it would be on any other OS, simply install your"
window manager/desktop environment of choice (through pkgin), set up your ~/.xinitrc,"
and you should be all set!"

EOM

read -r -p "Press [Enter] to continue..."
echo ''

# Create a small script to set the environment variables for zsh properly before calling the startx wrapper
echo -e "Creating environment friendly startx wrapper..."
cat <<'EOF' > /opt/X11/bin/startx.zsh
#!/bin/zsh
export LANG=en_US.UTF-8
export LC_ALL=en_US.UTF-8
/opt/X11/bin/startx
EOF

# Make the above script executable
chmod a+x /opt/X11/bin/startx.zsh

# Create a service file to be enabled to run at login to start X with the above script
echo -e "Creating X11 Apple service..."
cat <<'EOF' > /Library/LaunchAgents/com.startx.userlogin.plist
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
  <key>Label</key>
  <string>com.startx.userlogin</string>
  <key>ProgramArguments</key>
  <array>
      <string>/opt/X11/bin/startx.zsh</string>
  </array>
  <key>RunAtLoad</key>
  <true/>
</dict>
</plist>
EOF

# Make Finder quitable, ask user if they would like to disable its launch
defaults write com.apple.finder QuitMenuItem -bool YES
echo "Finder has been made quitable."
while :
do
  read -r -p "Would you like to disable its launch upon login? [y/n] " ANSWER
    case $ANSWER in
      [yY][eE][sS]|[yY])
        echo -e "\nOK, disabling Finder..."
        sudo -u $USER launchctl unload -w \ 
        /System/Library/LaunchAgents/com.apple.Finder.plist
        break
        ;;
      [nN][oO]|[nN])
        echo -e "\nLeaving Finder alone..."
        break
        ;; 
      *)
        echo "Please answer yes or no..."
    esac
done

# Permanently hide dock option
while :
  do
    read -r -p "Would you like to permanently hide the dock? [y/n] " ANSWER
      case $ANSWER in
        [yY][eE][sS]|[yY])
          echo -e "\nOK, hiding Dock.app..."
          defaults write com.apple.dock autohide-time-modifier \
          -int 10000000000; killall Dock
          break
          ;;
        [nN][oO]|[nN])
          echo -e "\nLeaving Dock.app alone..."
          break
          ;; 
        *)
          echo "Please answer yes or no..."
      esac
done

# Hide menu bar for XQuartz
echo -e "Configuring XQuartz to be seemless..."
 mv /Applications/Utilities/XQuartz.app/Contents/Info.plist{,.orig} ; cp /tmp/saveosx/plists/xquartz.plist /Applications/Utilities/XQuartz.app/Contents/Info.plist

# Set XQuartz to launch at login
echo ''
echo -e "Necessary X files have been created.\n"$YELLOW"Setting X to launch at login"$ESC""
sudo -u $USER launchctl load -w /Library/LaunchAgents/com.startx.userlogin.plist
echo ''
echo -e ""$GREEN"Complete!"$ESC""
read -r -p "Press [Enter] to continue... "
