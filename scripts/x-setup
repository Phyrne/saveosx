#! /bin/bash

# Copyright Â© 2014 Calum MacRae
# Use of this source code is governed by an ISC
# license that can be found in the LICENSE file.

# Save OS X script to set up X11

# Ensure script is being run from the 'scripts' subdir
if [[ ! $(pwd) =~ .*\/saveosx.*\/scripts$ ]]; then
  echo "Please run this script from the inteded directory!"
  echo "For instructions, please see the README"
  exit 1
fi

# Grab funcs/vars
. resources

# Title
title ""$BLUE_UL"X11 Setup"$ESC""
cat << EOM
Please understand that you will need to set up your X11 environment yourself.
This is done as it would be on any other OS, simply install your
window manager/desktop environment of choice (through pkgin), set up your ~/.xinitrc,
plus any other configurations your window manager/desktop environment may need
and you should be all set!

EOM

read -r -p "Press [Enter] to continue..."
echo ''

# Fetch & install XQuartz if it isn't already installed
if [ ! -d /Applications/Utilities/XQuartz.app ]; then
  echo 
  echo "Fetching XQuartz..."
  saferun curl -s -o /tmp/xquartz.dmg http://xquartz-dl.macosforge.org/SL/XQuartz-2.7.6.dmg
  sudo -v # Keep sudo authentication open
  echo "Mounting XQuartz disk image..."
  saferun hdiutil mount -mountpoint /Volumes/xquartz /tmp/xquartz.dmg 1>/dev/null # Mount XQuartz disk image, safely should failure occur
  echo "Installing XQuartz..."
  saferun sudo installer -pkg /Volumes/xquartz/XQuartz.pkg -target /
  echo -e "\n"$GREEN"XQuartz installed successfully!"$ESC""
  umount /Volumes/xquartz 2>&1 > /dev/null
  echo
elif [ -d /Applications/Utilities/XQuartz.app ]; then
  echo 
  echo -e "\n"$GREEN"It looks like XQuartz is already installed..."$ESC""
fi

# Set up startx launchd script
echo -e "Setting up X11 launchd service..."
if [ ! -d $LIBPATH ]; then
  mkdir -p $LIBPATH
  chown $USER:staff $LIBPATH
fi

cp -f ../plists/org.saveosx.startx.plist $LIB_PATH/
chown $USER:staff $LIB_PATH/org.saveosx.startx.plist
chmod 644 $LIB_PATH/org.saveosx.startx.plist

# Ask user if they would like to disable Finder
while :
do
  read -r -p "Would you like to disable Finder's launch upon login? [y/n] " ANSWER
    case $ANSWER in
      [yY][eE][sS]|[yY])
        echo -e "\nOK, disabling Finder..."
        sudo defaults write com.apple.finder QuitMenuItem -bool YES
        launchctl unload -w /System/Library/LaunchAgents/com.apple.Finder.plist
        break
        ;;
      [nN][oO]|[nN])
        echo -e "\nLeaving Finder alone..."
        break
        ;; 
      *)
        echo "Please answer yes or no..."
    esac
done

# Permanently hide dock option
while :
  do
    read -r -p "Would you like to permanently hide the dock? [y/n] " ANSWER
      case $ANSWER in
        [yY][eE][sS]|[yY])
          echo -e "\nOK, hiding Dock.app..."
          sudo defaults write com.apple.dock autohide-time-modifier -int 10000000000
          sudo defaults write com.apple.dock no-bouncing -bool TRUE
          killall Dock
          break
          ;;
        [nN][oO]|[nN])
          echo -e "\nLeaving Dock.app alone..."
          break
          ;; 
        *)
          echo "Please answer yes or no..."
      esac
done

# Hide menu bar for XQuartz
echo -e "Configuring XQuartz to be seemless..."
sudo mv /Applications/Utilities/XQuartz.app/Contents/Info.plist{,.orig} 2>&1 > /dev/null ; sudo cp -f ../plists/xquartz.plist /Applications/Utilities/XQuartz.app/Contents/Info.plist

# Set XQuartz to launch at login
echo ''
echo -e "Necessary X files have been created.\n"$YELLOW"Setting X to launch at login"$ESC""
launchctl load -w $LIB_PATH/org.saveosx.startx.plist
echo ''
echo -e ""$GREEN"Complete!"$ESC""
read -r -p "Press [Enter] to continue... "
