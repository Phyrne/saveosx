#! /bin/bash

# Check for root
if [[ $EUID -ne 0 ]]; then
  echo "This script must be run as root!"
  exit 1
fi

# Fancy title function
title() {
  COLUMNS=$(tput cols)
  tput clear
  Y=$((($COLUMNS-${#MESSAGE})/2))
  X=1
  tput cup $X $Y
  echo -e "${MESSAGE}"
}

# Confirm function to prompt user for decision
confirm() {
    case $ANSWER in
      y)
          echo "Removing $1"
        if [ "$2" = "-d" ]; then
          launchctl unload -w $DAEMONPATH > /dev/null 2>&1
          rm -rf $FILEPATH
        else
          rm -rf $FILEPATH
        fi
          break
          ;;
      n)
        echo "Leaving $1 intact"
        break
        ;;
      *)
        echo "Please answer yes or no... "
    esac
}

#ANSI properties/colours
ESC='\033[0m'
BOLD='\033[1m'
BLUE='\033[38;34m'
BLUE_UL='\033[38;4;34m'
GREEN='\033[38;32m'
GREEN_UL='\033[38;4;32m'
CYAN='\033[38;36m'
CYAN_UL='\033[38;4;36m'
RED='\033[38;31m'
RED_UL='\033[38;4;31m'
PURPLE='\033[38;35m'
PURPLE_UL='\033[38;4;35m'
YELLOW='\033[38;33m'
YELLOW_UL='\033[38;4;33m'

# Title screen
clear
MESSAGE=""$PURPLE_UL"Filesystem Cleanup"$ESC""
title
echo ''
echo -e "This script will remove various parts of OS X which could be considered unecessary with regards\n to general function."
echo -e "As there may be some features you wish to keep, we've taken the courtesy of prompting you for each action taken."
echo -e "The only action taken in this script that will not ask for permission is the removal of some useless cache and logs."
echo ''
echo -e "Please anser 'y' to take action, or 'n' to leave things in tact.\n"
read -r -p "Press [Enter] to continue..."
echo ''

# Commented out, as this is currently causing problems
# Render spotlight unusable
#echo "Disabling Spotlight"
#mdutil -a -v -i off > /dev/null 2>&1
#chmod 000 /System/Library/Frameworks/CoreServices.framework/Frameworks/Metadata.framework/        â†³ Support/* > /dev/null 2>&1
#launchctl unload -w /System/Library/LaunchDaemons/com.apple.metadata.mds.plist > /dev/null 2>&1
#mv /System/Library/CoreServices/Search.bundle/Contents/MacOS/Search{,.disabled} > /dev/null 2>&1
#chmod -x /System/Library/CoreServices/Search.bundle/Contents/MacOS/Search.disabled > /dev/null 2>&1
#rm -rf /System/Library/CoreServices/Search.bundle.disabled > /dev/null 2>&1
#mv /System/Library/CoreServices/Search.bundle{,.disabled} > /dev/null 2>&1
#killall SystemUIServer > /dev/null 2>&1

# Hibernation
FILEPATH=/pivate/var/vm/sleepimage
while :
do
  read -r -p "Would you like to disable hibernation? [y/n] " ANSWER
    confirm hibernation
done
if [ $ANSWER == 'y' ]; then
  pmset -a hibernatemode 0
fi

# Speech files
FILEPATH=/System/Library/Voices/*
while :
do
  read -r -p "Would you like to remove the Speach Files? [y/n] " ANSWER
    confirm "Speach Files"
done

# Remove wallpapers & screensavers
FILEPATH=/Library/{Desktop\ Pictures,Screen\ Savers}/*
while :
do
  read -r -p "Would you like to remove the wallpapers & screensavers? [y/n] " ANSWER
  confirm "wallpapers & screensavers"
done

# Remove widget files
FILEPATH=/Library/Widgets/*
while :
do
  read -r -p "Would you like to remove the widgets? [y/n] " ANSWER
  confirm widgets
done

# Remove Automater
FILEPATH=/System/Library/Automater
while :
do
  read -r -p "Would you like to remove Automater? [y/n] " ANSWER
  confirm Automator
done

# Remove log files & caches
echo "Removing unecessary logs, tmp files & caches"
rm -rf /private/var/folders/* # Quick look caches
rm -rf /private/var/tmp/TM* # tmp files
rm -rf /Library/Caches/* # General caches
rm -rf /Users/*/[lL]ibrary/Caches/* # User library cache

# Remove update files
echo "Removing update files"
rm -rf /Library/Updates/*


# Emacs
FILEPATH=/usr/{bin,libexec,share/info}/emacs,/opt/local/share/emacs

while :
do
  read -r -p "Would you like to remove the Emacs editor? [y/n] " ANSWER
  confirm Emacs
done

# Dictionaries
FILEPATH=/Library/Dictionaries/*.dictionary

while :
do
  read -r -p "Would you like to remove the dictionaries? [y/n] " ANSWER
  confirm dictionaries
done

# Swap
DAEMONPATH=/System/Library/LaunchDaemons/com.apple.dynamic_pager.plist
FILEPATH=/private/var/vm/swapfile*

while :
do
  read -r -p "Would you like to disable swapping? [y/n] " ANSWER
  confirm swap -d
done
